// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#ifndef PROTOBUF_messages_2eproto__INCLUDED
#define PROTOBUF_messages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_messages_2eproto();
void protobuf_AssignDesc_messages_2eproto();
void protobuf_ShutdownFile_messages_2eproto();

class Position;
class Robot;
class FieldData;

// ===================================================================

class Position : public ::google::protobuf::Message {
 public:
  Position();
  virtual ~Position();
  
  Position(const Position& from);
  
  inline Position& operator=(const Position& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Position& default_instance();
  
  void Swap(Position* other);
  
  // implements Message ----------------------------------------------
  
  Position* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Position& from);
  void MergeFrom(const Position& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required float x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x() const;
  inline void set_x(float value);
  
  // required float y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y() const;
  inline void set_y(float value);
  
  // @@protoc_insertion_point(class_scope:Position)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  float x_;
  float y_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();
  
  void InitAsDefaultInstance();
  static Position* default_instance_;
};
// -------------------------------------------------------------------

class Robot : public ::google::protobuf::Message {
 public:
  Robot();
  virtual ~Robot();
  
  Robot(const Robot& from);
  
  inline Robot& operator=(const Robot& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Robot& default_instance();
  
  void Swap(Robot* other);
  
  // implements Message ----------------------------------------------
  
  Robot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Robot& from);
  void MergeFrom(const Robot& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Position position = 1;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 1;
  inline const ::Position& position() const;
  inline ::Position* mutable_position();
  inline ::Position* release_position();
  
  // required bool team = 2;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 2;
  inline bool team() const;
  inline void set_team(bool value);
  
  // @@protoc_insertion_point(class_scope:Robot)
 private:
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_team();
  inline void clear_has_team();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::Position* position_;
  bool team_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();
  
  void InitAsDefaultInstance();
  static Robot* default_instance_;
};
// -------------------------------------------------------------------

class FieldData : public ::google::protobuf::Message {
 public:
  FieldData();
  virtual ~FieldData();
  
  FieldData(const FieldData& from);
  
  inline FieldData& operator=(const FieldData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FieldData& default_instance();
  
  void Swap(FieldData* other);
  
  // implements Message ----------------------------------------------
  
  FieldData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FieldData& from);
  void MergeFrom(const FieldData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Robot robots = 1;
  inline int robots_size() const;
  inline void clear_robots();
  static const int kRobotsFieldNumber = 1;
  inline const ::Robot& robots(int index) const;
  inline ::Robot* mutable_robots(int index);
  inline ::Robot* add_robots();
  inline const ::google::protobuf::RepeatedPtrField< ::Robot >&
      robots() const;
  inline ::google::protobuf::RepeatedPtrField< ::Robot >*
      mutable_robots();
  
  // repeated .Position referee = 2;
  inline int referee_size() const;
  inline void clear_referee();
  static const int kRefereeFieldNumber = 2;
  inline const ::Position& referee(int index) const;
  inline ::Position* mutable_referee(int index);
  inline ::Position* add_referee();
  inline const ::google::protobuf::RepeatedPtrField< ::Position >&
      referee() const;
  inline ::google::protobuf::RepeatedPtrField< ::Position >*
      mutable_referee();
  
  // @@protoc_insertion_point(class_scope:FieldData)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::Robot > robots_;
  ::google::protobuf::RepeatedPtrField< ::Position > referee_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();
  
  void InitAsDefaultInstance();
  static FieldData* default_instance_;
};
// ===================================================================


// ===================================================================

// Position

// required float x = 1;
inline bool Position::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Position::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Position::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Position::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float Position::x() const {
  return x_;
}
inline void Position::set_x(float value) {
  set_has_x();
  x_ = value;
}

// required float y = 2;
inline bool Position::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Position::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Position::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Position::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float Position::y() const {
  return y_;
}
inline void Position::set_y(float value) {
  set_has_y();
  y_ = value;
}

// -------------------------------------------------------------------

// Robot

// required .Position position = 1;
inline bool Robot::has_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Robot::set_has_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Robot::clear_has_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Robot::clear_position() {
  if (position_ != NULL) position_->::Position::Clear();
  clear_has_position();
}
inline const ::Position& Robot::position() const {
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
inline ::Position* Robot::mutable_position() {
  set_has_position();
  if (position_ == NULL) position_ = new ::Position;
  return position_;
}
inline ::Position* Robot::release_position() {
  clear_has_position();
  ::Position* temp = position_;
  position_ = NULL;
  return temp;
}

// required bool team = 2;
inline bool Robot::has_team() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Robot::set_has_team() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Robot::clear_has_team() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Robot::clear_team() {
  team_ = false;
  clear_has_team();
}
inline bool Robot::team() const {
  return team_;
}
inline void Robot::set_team(bool value) {
  set_has_team();
  team_ = value;
}

// -------------------------------------------------------------------

// FieldData

// repeated .Robot robots = 1;
inline int FieldData::robots_size() const {
  return robots_.size();
}
inline void FieldData::clear_robots() {
  robots_.Clear();
}
inline const ::Robot& FieldData::robots(int index) const {
  return robots_.Get(index);
}
inline ::Robot* FieldData::mutable_robots(int index) {
  return robots_.Mutable(index);
}
inline ::Robot* FieldData::add_robots() {
  return robots_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Robot >&
FieldData::robots() const {
  return robots_;
}
inline ::google::protobuf::RepeatedPtrField< ::Robot >*
FieldData::mutable_robots() {
  return &robots_;
}

// repeated .Position referee = 2;
inline int FieldData::referee_size() const {
  return referee_.size();
}
inline void FieldData::clear_referee() {
  referee_.Clear();
}
inline const ::Position& FieldData::referee(int index) const {
  return referee_.Get(index);
}
inline ::Position* FieldData::mutable_referee(int index) {
  return referee_.Mutable(index);
}
inline ::Position* FieldData::add_referee() {
  return referee_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Position >&
FieldData::referee() const {
  return referee_;
}
inline ::google::protobuf::RepeatedPtrField< ::Position >*
FieldData::mutable_referee() {
  return &referee_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_messages_2eproto__INCLUDED
